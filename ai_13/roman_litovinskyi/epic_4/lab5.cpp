#include <iostream>
#include <vector>

int main() {
    // Приклад двовимірного масиву
    std::vector<std::vector<int>> matrix = {
        {1, 2, 3},
        {4, 5, 6},
        {1, 7, 8}
    };

    // Знаходимо рядок та стовпець з однаковими першими елементами
    int rowToSwap = -1; // Індекс рядка для обміну
    int colToSwap = -1; // Індекс стовпця для обміну
    for (size_t i = 0; i < matrix.size(); ++i) { // Проходимо по рядках матриці
        for (size_t j = 0; j < matrix[i].size(); ++j) { // Проходимо по елементах у кожному рядку
            if (matrix[i][0] == matrix[0][j]) { // Перевіряємо, чи співпадають перші елементи рядка та стовпця
                rowToSwap = i; // Запам'ятовуємо індекс рядка
                colToSwap = j; // Запам'ятовуємо індекс стовпця
                break; // Вийти з циклу, якщо знайдено відповідність
            }
        }
        if (rowToSwap != -1) { // Якщо знайдено відповідність, вийти з циклу по рядках
            break;
        }
    }

    // Обмін рядка та стовпця, якщо знайдено відповідність
    if (rowToSwap != -1 && colToSwap != -1) {
        std::swap(matrix[rowToSwap], matrix[0]); // Обмін рядків
        for (size_t i = 0; i < matrix.size(); ++i) { // Проходимо по всіх рядках матриці
            std::swap(matrix[i][colToSwap], matrix[i][0]); // Обмін стовпців
        }
    }

    // Виведення зміненого масиву на екран
    for (const auto& row : matrix) { // Проходимо по кожному рядку матриці
        for (int val : row) { // Виводимо кожен елемент рядка
            std::cout << val << " ";
        }
        std::cout << std::endl; // Після кожного рядка - перехід на новий рядок
    }

    return 0; // Повертаємо 0 для позначення успішного завершення програми
}
