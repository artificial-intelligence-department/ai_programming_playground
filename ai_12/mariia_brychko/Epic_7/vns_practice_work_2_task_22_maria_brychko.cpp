#include <iostream> // Підключення бібліотеки введення/виведення
#include <cmath> // Підключення бібліотеки математичних функцій
using namespace std;  // Використання простору імен std - це дозволяє використовувати всі класи та функції з стандартної бібліотеки С++

bool isInsideCircle(double x, double y, double a, double b, double R) {     // Функція перевіряє, чи точка з координатами (x, y) знаходиться всередині кола з центром у точці (a, b) та радіусом R
    double distance = sqrt(pow(x - a, 2) + pow(y - b, 2)); // Обчислення відстані від точки до центра кола
    return (distance <= R); // Повертає true, якщо точка знаходиться всередині кола, інакше - false
}

int main() {   // Початок визначення функції main - головної функції програми
    float a, b, R, x, y; // Оголошення змінних для координат центру (a, b), радіуса R та координат точок (x, y)
    cout << "Enter the coordinates of the center: "; // Вивід повідомлення про введення координат центру
    cin >> a >> b; // Зчитування введених користувачем координат центру
    cout << "Enter the radius: "; // Вивід повідомлення про введення радіуса
    cin >> R; // Зчитування введеного користувачем радіуса


    for (int i = 1; i <= 5; i++) { // Початок циклу для введення координат п'яти точок
        cout << "Enter the coordinates of the " << i << " point: ";  // Вивід повідомлення про введення координат точки номер i
    cin >> x >> y;  // Зчитування координат точки з консолі (x та y)


        if (isInsideCircle(x, y, a, b, R)) { // Виклик функції, перевірка, чи точка знаходиться всередині кола
            cout << "A point with coordinates (" << x << ", " << y << ") is inside the circle." << endl; // Виведення, якщо точка знаходиться всередині
        } else {
            cout << "A point with coordinates (" << x << ", " << y << ") is outside the circle." << endl; // Виведення, якщо точка знаходиться поза колом
        }
    }

    return 0; // Повернення нульового значення - індикація успішного завершення програми
}
